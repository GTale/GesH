' VBA 模块代码
Option Explicit

' 常量定义
Const TEMP_FOLDER As String = "C:\Temp\PComm\"
Const POLL_INTERVAL As Long = 10  ' 10ms 轮询间隔
Const MAX_WAIT_MS As Long = 10000 ' 10秒超时

' 文件路径
Const CMD_FILE As String = "PCommCmd.dat"
Const STATUS_FILE As String = "PCommStatus.dat"
Const RESULT_FILE As String = "PCommResult.dat"

' 状态常量
Const STATE_IDLE As String = "IDLE"
Const STATE_PENDING As String = "PENDING"
Const STATE_PROCESSING As String = "PROCESSING"
Const STATE_COMPLETE As String = "COMPLETE"

' 初始化函数
Sub InitializePComm()
    ' 确保临时目录存在
    If Dir(TEMP_FOLDER, vbDirectory) = "" Then MkDir TEMP_FOLDER
    
    ' 初始化状态文件
    WriteFile TEMP_FOLDER & STATUS_FILE, STATE_IDLE
End Sub

' 启动监听服务
Sub StartListener()
    On Error Resume Next
    ' 确保VBS脚本存在
    Dim vbsPath As String
    vbsPath = ThisWorkbook.Path & "\PCommListener.vbs"
    If Dir(vbsPath) = "" Then
        MsgBox "VBS监听脚本不存在: " & vbsPath, vbCritical
        Exit Sub
    End If
    
    ' 启动VBS监听服务
    Dim wsh As Object
    Set wsh = CreateObject("WScript.Shell")
    wsh.Run "wscript """ & vbsPath & """", 0, False
    Set wsh = Nothing
    
    ' 等待服务初始化
    Sleep 500
End Sub

' 发送命令核心函数 (无锁版本)
Function SendCommand(cmdType As String, Optional cmdValue As String = "") As String
    Dim cmdFilePath As String, statusFilePath As String, resultFilePath As String
    cmdFilePath = TEMP_FOLDER & CMD_FILE
    statusFilePath = TEMP_FOLDER & STATUS_FILE
    resultFilePath = TEMP_FOLDER & RESULT_FILE
    
    ' 等待空闲状态
    If Not WaitForState(STATE_IDLE) Then
        SendCommand = "ERROR=等待空闲状态超时"
        Exit Function
    End If
    
    ' 写入命令文件
    WriteFile cmdFilePath, cmdType & "=" & cmdValue
    
    ' 设置状态为待处理
    WriteFile statusFilePath, STATE_PENDING
    
    ' 等待处理完成
    If Not WaitForState(STATE_COMPLETE) Then
        SendCommand = "ERROR=等待处理完成超时"
        Exit Function
    End If
    
    ' 读取结果
    SendCommand = ReadFile(resultFilePath)
    
    ' 重置状态
    WriteFile statusFilePath, STATE_IDLE
End Function

' 等待特定状态
Function WaitForState(targetState As String) As Boolean
    Dim startTime As Double
    startTime = Timer * 1000
    
    Do
        If ReadFile(TEMP_FOLDER & STATUS_FILE) = targetState Then
            WaitForState = True
            Exit Function
        End If
        
        ' 检查超时
        If (Timer * 1000 - startTime) > MAX_WAIT_MS Then
            Exit Function
        End If
        
        ' 短间隔等待
        Sleep POLL_INTERVAL
        DoEvents
    Loop
End Function

' 文件操作函数
Sub WriteFile(filePath As String, content As String)
    Dim fileNum As Integer
    fileNum = FreeFile
    
    ' 原子写入：先写临时文件，然后重命名
    Dim tempFilePath As String
    tempFilePath = filePath & ".tmp"
    
    ' 写入临时文件
    Open tempFilePath For Output As #fileNum
    Print #fileNum, content
    Close #fileNum
    
    ' 重命名替换原文件
    On Error Resume Next
    If Dir(filePath) <> "" Then Kill filePath
    Name tempFilePath As filePath
End Sub

Function ReadFile(filePath As String) As String
    If Dir(filePath) = "" Then Exit Function
    
    Dim fileNum As Integer
    fileNum = FreeFile
    
    Open filePath For Input As #fileNum
    ReadFile = Input(LOF(fileNum), #fileNum)
    Close #fileNum
End Function

' ==============================
' 封装的命令函数 (保持不变)
' ==============================

Function ConnectSession(sessionName As String) As String
    ConnectSession = SendCommand("CONN", sessionName)
End Function

Function SendKeysToSession(keys As String) As String
    SendKeysToSession = SendCommand("KEYS", keys)
End Function

Function WaitForText(text As String) As String
    WaitForText = SendCommand("WAIT", text)
End Function

Function GetScreenText(row As Integer, col As Integer, length As Integer) As String
    GetScreenText = SendCommand("GET", row & "," & col & "," & length)
End Function

' ... 其他封装函数保持不变 ...






' File: PCommListener.vbs
Option Explicit

' 配置参数
Const POLL_INTERVAL = 50  ' 50ms轮询间隔
Const MAX_WAIT = 30000    ' 30秒超时

' 文件路径
Dim fso, tempFolder, cmdFile, statusFile, resultFile
Set fso = CreateObject("Scripting.FileSystemObject")
tempFolder = "C:\Temp\PComm\"
cmdFile = tempFolder & "PCommCmd.dat"
statusFile = tempFolder & "PCommStatus.dat"
resultFile = tempFolder & "PCommResult.dat"

' 确保临时目录存在
If Not fso.FolderExists(tempFolder) Then
    fso.CreateFolder tempFolder
End If

' 初始化状态文件
If Not fso.FileExists(statusFile) Then
    WriteFile statusFile, "IDLE"
End If

' 初始化PComm对象
Dim AutECLPS, AutECLSess, sessionConnected, currentSession
Set AutECLPS = CreateObject("PCOMM.autECLPS")
Set AutECLSess = CreateObject("PCOMM.autECLSession")
sessionConnected = False
currentSession = ""

' 主监听循环
Do While True
    CheckAndProcess
    WScript.Sleep POLL_INTERVAL
Loop

' 检查并处理命令
Sub CheckAndProcess()
    Dim currentStatus
    currentStatus = ReadFile(statusFile)
    
    ' 只有待处理状态才处理
    If currentStatus = "PENDING" Then
        ' 设置状态为处理中
        WriteFile statusFile, "PROCESSING"
        
        ' 读取并处理命令
        Dim cmdData
        cmdData = ReadFile(cmdFile)
        
        If cmdData <> "" Then
            Dim parts, cmdType, cmdValue
            parts = Split(cmdData, "=", 2)
            cmdType = parts(0)
            
            If UBound(parts) >= 1 Then 
                cmdValue = parts(1)
            Else
                cmdValue = ""
            End If
            
            ' 执行命令
            Dim result
            result = ExecuteCommand(cmdType, cmdValue)
            
            ' 写入结果
            WriteFile resultFile, result
        End If
        
        ' 设置状态为完成
        WriteFile statusFile, "COMPLETE"
    End If
End Sub

' 原子写入文件 (VBS版本)
Sub WriteFile(filePath, content)
    On Error Resume Next
    Dim tempFilePath
    tempFilePath = filePath & ".tmp"
    
    ' 写入临时文件
    Set ts = fso.CreateTextFile(tempFilePath, True)
    ts.Write content
    ts.Close
    
    ' 替换原文件
    If fso.FileExists(filePath) Then fso.DeleteFile filePath, True
    fso.MoveFile tempFilePath, filePath
End Sub

' 读取文件 (VBS版本)
Function ReadFile(filePath)
    On Error Resume Next
    If Not fso.FileExists(filePath) Then Exit Function
    
    Set ts = fso.OpenTextFile(filePath, 1) ' 1 = ForReading
    ReadFile = ts.ReadAll
    ts.Close
End Function

' ==============================
' PComm 操作函数 (保持不变)
' ==============================

Function ExecuteCommand(cmdType, cmdValue)
    ' ... 与之前相同 ...
End Function

Function ConnectSession(sessionName)
    ' ... 与之前相同 ...
End Function

Function SendKeys(keys)
    ' ... 与之前相同 ...
End Function

' ... 其他PComm函数保持不变 ...
